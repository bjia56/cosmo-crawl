name: Build DCSS

on:
  workflow_dispatch:
    inputs:
      debug_interactive:
        required: false
        type: boolean
  push:
    branches: ["main"]

env:
  COSMOPOLITAN_VERSION: 3.9.7
  NCURSES_VERSION: 6.4
  DCSS_VERSION: 0.32.1

jobs:
  build:
    name: Build DCSS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup cosmocc
        uses: bjia56/setup-cosmocc@v0.0.3
        with:
          version: ${{ env.COSMOPOLITAN_VERSION }}

      - name: Fixup Cosmopolitan toolchain
        run: |
          cd $(dirname $(which cosmocc))

          chmod +x cosmoranlib
          ln -s cosmoranlib x86_64-unknown-cosmo-ranlib
          ln -s cosmoranlib aarch64-unknown-cosmo-ranlib

          ln -s x86_64-unknown-cosmo-cc x86_64-unknown-cosmo-gcc
          ln -s x86_64-unknown-cosmo-c++ x86_64-unknown-cosmo-g++
          ln -s aarch64-unknown-cosmo-cc aarch64-unknown-cosmo-gcc
          ln -s aarch64-unknown-cosmo-c++ aarch64-unknown-cosmo-g++

          # enable rtti, exceptions
          which x86_64-unknown-cosmo-c++ | xargs sed -i 's/fno\-rtti//g'
          which x86_64-unknown-cosmo-c++ | xargs sed -i 's/fno\-exceptions//g'
          which aarch64-unknown-cosmo-c++ | xargs sed -i 's/fno\-rtti//g'
          which aarch64-unknown-cosmo-c++ | xargs sed -i 's/fno\-exceptions//g'

      - name: Install some packages
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt update
          sudo apt -y install wget pkg-config git ncurses-bin ncurses-term

      - name: Make ncurses prefix dirs
        run: |
          sudo mkdir /usr/x86_64-unknown-cosmo
          sudo mkdir /usr/aarch64-unknown-cosmo

      - name: Build ncurses
        run: |
          wget https://github.com/bjia56/build-dependencies/releases/download/portable-python/ncurses-${{ env.NCURSES_VERSION }}.tar.gz

          tar xf ncurses-${{ env.NCURSES_VERSION }}.tar.gz
          cd ncurses-${{ env.NCURSES_VERSION }}
          CC=x86_64-unknown-cosmo-cc CXX=x86_64-unknown-cosmo-c++ ./configure --with-normal --without-progs --enable-overwrite --disable-stripping --enable-widec --with-termlib --disable-database --with-fallbacks=xterm,xterm-256color,screen-256color,linux,vt100 --prefix=/usr/x86_64-unknown-cosmo
          make -j4
          sudo make install

          cd ..
          rm -rf ncurses-${{ env.NCURSES_VERSION }}

          tar xf ncurses-${{ env.NCURSES_VERSION }}.tar.gz
          cd ncurses-${{ env.NCURSES_VERSION }}
          CC=aarch64-unknown-cosmo-cc CXX=aarch64-unknown-cosmo-c++ ./configure --with-normal --without-progs --enable-overwrite --disable-stripping --enable-widec --with-termlib --disable-database --with-fallbacks=xterm,xterm-256color,screen-256color,linux,vt100 --prefix=/usr/aarch64-unknown-cosmo
          make -j4
          sudo make install

      - name: Build DCSS
        run: |
          git clone https://github.com/crawl/crawl.git
          cd crawl
          git checkout 0.32.1
          git submodule update --init
          patch -p1 < ${{ github.workspace }}/dcss.patch

          cd crawl-ref/source

          # disable -pipe flag in the compiler
          grep -rl "\-pipe" | xargs sed -i 's/\-pipe//g'

          # build
          CROSSHOST=x86_64-unknown-cosmo make V=1 -j4
          CROSSHOST=aarch64-unknown-cosmo make V=1 -j4

      - name: Interactive debugging
        uses: fawazahmed0/action-debug-vscode@v3
        if: ${{ always() && inputs.debug_interactive }}